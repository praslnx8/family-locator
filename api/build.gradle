plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id "com.google.protobuf" version "0.8.17"
}

def propertiesFile = project.rootProject.file('app.properties')

android {
    compileSdk rootProject.ext.target_sdk

    defaultConfig {
        minSdk rootProject.ext.min_sdk
        targetSdk rootProject.ext.target_sdk
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        Properties properties = new Properties()
        if (propertiesFile.exists()) {
            properties.load(propertiesFile.newDataInputStream())
        }

        buildConfigField "String", "WEATHER_URL", properties.getProperty("WEATHER_URL", "")
        buildConfigField "String", "WEATHER_TOKEN", properties.getProperty("WEATHER_TOKEN", "")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {


    //Location
    implementation 'com.google.android.gms:play-services-location:20.0.0'

    //Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    //Firebase
    implementation platform('com.google.firebase:firebase-bom:30.4.0')
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-database-ktx'

    //Datastore
    implementation "androidx.datastore:datastore:1.0.0"
    implementation  "com.google.protobuf:protobuf-javalite:3.18.0"

    //Junit
    testImplementation "junit:junit:$junit_version"

    //Android Junit
    androidTestImplementation "androidx.test.ext:junit:$android_junit_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_version"
    androidTestImplementation "androidx.test:rules:$androidx_test_version"

    //Truth
    testImplementation "com.google.truth:truth:$truth_version"
    androidTestImplementation "com.google.truth:truth:$truth_version"
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.14.0:osx-x86_64'
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}